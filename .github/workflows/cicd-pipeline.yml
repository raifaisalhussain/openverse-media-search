name: CI/CD Pipeline for Openverse Media Search

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Run Tests
        run: mvn test

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build  # Ensures tests pass before Docker build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/openverse-media-search:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/openverse-media-search:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker  # Ensures Docker build succeeds before deployment
    if: github.ref == 'refs/heads/main'

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/openverse-media-search:latest
            docker stop openverse-media-search || true
            docker rm openverse-media-search || true
            docker run -d -p 8080:8080 --name openverse-media-search ${{ secrets.DOCKER_USERNAME }}/openverse-media-search:latest
