services:
  db:
    image: postgres:15
    container_name: media-db
    environment:
      POSTGRES_DB: mediaapp
      POSTGRES_USER: mediauser
      POSTGRES_PASSWORD: test123
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mediauser -d mediaapp" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: media-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mediaapp
      SPRING_DATASOURCE_USERNAME: mediauser
      SPRING_DATASOURCE_PASSWORD: test123
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: openverse-frontend
    environment:
      - REACT_APP_API_BASE_URL=
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
