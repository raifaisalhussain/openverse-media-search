spring.application.name=openverse-media-search

# Dynamic Database Configuration for Docker Environment
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/mediaapp}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:mediauser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:test123}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Recommended: Disable Open Session in View to force immediate DB commits
spring.jpa.open-in-view=false

# Actuator Health Check
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.enabled-by-default=true

# Optional Debugging to confirm SQL queries and JDBC connections
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc.datasource=DEBUG

#logging settings
logging.file.name=app.log

# OR save logs to a directory (e.g., `logs/spring.log`)
logging.file.path=logs

# Log security context
logging.level.org.springframework.security=DEBUG

# Log your application packages
logging.level.com.mediaapp=DEBUG

# === Google OAuth2 Configuration ===
spring.security.oauth2.client.registration.google.client-id=?
spring.security.oauth2.client.registration.google.client-secret=?
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Allow cookies/session sharing with frontend
server.servlet.session.cookie.same-site=LAX
server.servlet.session.cookie.secure=false
spring.session.cookie.name=SESSIONID

